name: 06 Prepare CHR Initial Config (06_Prepare_CHR_Config.yml)

# Reads deploy-params.json
# Replaces placeholders in routeros-7.18-base-template.rsc with actual values
# (export values, and generate a valid MikroTik .rsc config file from your updated template using envsubst)

# Outputs the final .rsc file into prep-chr-config/out/
# Uploads the result as artifact so you can use it in follow-up workflows

on:
  workflow_dispatch:

jobs:
  prepare-config:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gettext jq

      - name: Load deployment parameters and generate config
        run: |
          echo "Generating CHR config from template..."

          # Export deploy-params.json as environment variables
          export $(jq -r 'to_entries | map("\(.key)=\(.value|tostring)") | .[]' deploy-params.json)

          # Ensure output folder exists
          mkdir -p prep-chr-config/out

          # Use envsubst to replace placeholders
          envsubst < prep-chr-config/routeros-7.18-base-template.rsc > prep-chr-config/out/routeros-7.18-base-config.rsc

          echo "Generated config at: prep-chr-config/out/routeros-7.18-base-config.rsc"

      - name: Upload generated config as artifact
        uses: actions/upload-artifact@v4
        with:
          name: chr-routeros-config
          path: prep-chr-config/out/routeros-7.18-base-config.rsc

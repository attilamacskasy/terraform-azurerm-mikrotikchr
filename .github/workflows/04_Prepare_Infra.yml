name: 04 Prepare Azure Infra for CHR Deployment (04_Prepare_Infra.yml)

on:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Load deployment parameters
        id: params
        run: |
          PARAMS=$(cat deploy-params.json)
          echo "LOCATION=$(echo $PARAMS | jq -r .location)" >> $GITHUB_ENV
          echo "RESOURCE_GROUP=$(echo $PARAMS | jq -r .resource_group)" >> $GITHUB_ENV
          echo "STORAGE_ACCOUNT=$(echo $PARAMS | jq -r .storage_account)" >> $GITHUB_ENV
          echo "CONTAINER_NAME=$(echo $PARAMS | jq -r .container_name)" >> $GITHUB_ENV
          echo "SP_NAME=$(echo $PARAMS | jq -r .sp_name)" >> $GITHUB_ENV
          echo "IMAGE_FILE=$(echo $PARAMS | jq -r .image_file)" >> $GITHUB_ENV
          echo "VHD_NAME=$(echo $PARAMS | jq -r .vhd_name)" >> $GITHUB_ENV

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_ADMIN }}

      - name: Create Storage Account and Blob Container
        run: |
          az storage account show --name $STORAGE_ACCOUNT --resource-group $RESOURCE_GROUP >/dev/null 2>&1 || \
          az storage account create --name $STORAGE_ACCOUNT --resource-group $RESOURCE_GROUP --location $LOCATION --sku Standard_LRS

          az storage container show --name $CONTAINER_NAME --account-name $STORAGE_ACCOUNT >/dev/null 2>&1 || \
          az storage container create --name $CONTAINER_NAME --account-name $STORAGE_ACCOUNT

      - name: Unzip CHR Image
        run: unzip $IMAGE_FILE -d prep-chr-image

      - name: Assign Storage Blob Data Contributor to SP
        run: |
          spId=$(az ad sp list --display-name $SP_NAME --query "[0].appId" -o tsv)
          subscriptionId=$(az account show --query id -o tsv)
          scope="/subscriptions/$subscriptionId/resourceGroups/$RESOURCE_GROUP/providers/Microsoft.Storage/storageAccounts/$STORAGE_ACCOUNT"

          echo "Assigning 'Storage Blob Data Contributor' to SP: $spId at scope: $scope"

          az role assignment create \
            --assignee $spId \
            --role "Storage Blob Data Contributor" \
            --scope $scope || echo "Role assignment may already exist. Continuing."

      - name: Wait for role propagation
        run: |
          echo "Waiting 30 seconds to ensure role assignments propagate..."
          sleep 30

      - name: Retryable Upload VHD to Azure Blob
        run: |
          for i in {1..5}; do
            echo "Attempt $i to upload VHD..."
            az storage blob upload \
              --account-name $STORAGE_ACCOUNT \
              --container-name $CONTAINER_NAME \
              --name $VHD_NAME \
              --file prep-chr-image/$VHD_NAME \
              --auth-mode login \
              --overwrite && break || sleep 30
          done

      - name: Create Terraform Service Principal
        id: create_sp
        run: |
          APP=$(az ad sp create-for-rbac \
            --name $SP_NAME \
            --role Contributor \
            --scopes /subscriptions/$(az account show --query id -o tsv)/resourceGroups/$RESOURCE_GROUP \
            --sdk-auth || az ad sp list --display-name $SP_NAME --query "[0]" -o json)

          echo "$APP" > sp.json
          echo "SP_JSON=$APP" >> $GITHUB_ENV

      - name: Save SP credentials to GitHub Secret
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo '${{ env.SP_JSON }}' | gh secret set AZURE_CREDENTIALS --repo $GITHUB_REPOSITORY

      - name: Generate Terraform backend config
        run: |
          cat <<EOF > terraform/backend.tf
          terraform {
            backend "azurerm" {
              resource_group_name  = "$RESOURCE_GROUP"
              storage_account_name = "$STORAGE_ACCOUNT"
              container_name       = "$CONTAINER_NAME"
              key                  = "terraform.tfstate"
            }
          }
          EOF
          cat terraform/backend.tf
